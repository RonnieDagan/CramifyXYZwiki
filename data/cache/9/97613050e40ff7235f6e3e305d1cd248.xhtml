
<h1 class="sectionedit1" id="ap_computer_science_principles_study_guide">AP Computer Science Principles Study Guide</h1>
<div class="level1">

<p>
From Simple Studies, <a href="https://simplestudies.edublogs.org/" class="urlextern" target="_blank" title="https://simplestudies.edublogs.org/" rel="ugc nofollow noopener">https://simplestudies.edublogs.org</a> &amp; @simplestudiesinc on Instagram
</p>
<blockquote><div class="no">
 Disclaimer: All Quick Questions come from APCSP Quizlets</div></blockquote>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;AP Computer Science Principles Study Guide&quot;,&quot;hid&quot;:&quot;ap_computer_science_principles_study_guide&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:1,&quot;range&quot;:&quot;1-248&quot;} -->
<h2 class="sectionedit2" id="unit_1-_the_internet">Unit 1- The Internet</h2>
<div class="level2">

<p>
<strong>Chapter 1</strong>
</p>

<p>
<strong>Lesson 1: Personal Innovations</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Innovation- a new or improved idea, device, or product</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Computer Science is changing everything (energy, fashion, medicine, agriculture, public safety, etc.)</div>
</li>
</ul>

<p>
<strong>Lesson 2: Sending Binary Messages</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Binary- number system that only uses the digits 1 and 0</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Bit- short for “binary digit”; the single unit of information in a computer</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> A binary question only has two options or answers (ex. Does 1+1 =2, the answer to this is yes or no.)</div>
</li>
</ul>

<p>
<strong>Lesson 3: Sending Binary Messages with the Internet Simulator Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Bandwidth- transmission capacity measure by bit rate</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Bit- a contraction of “binary digit”; the single unit of information in a computer, typically represented as a 0 or 1.</div>
</li>
</ul>
<ul>
<li class="level1 node"><div class="li"> Bit rate- the number of bits that are conveyed or processed per unit of time</div>
<ol>
<li class="level2"><div class="li"> e.g. 8 bits/ sec</div>
</li>
</ol>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Latency- Time it takes for a bit to travel from its sender to its receiver</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Protocol- a set of rules directing the transmission of data between multiple devices</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
Internet: a tangible, physical system made to move information
</p>

<p>
Wires, Cables, and Wifi
</p>
<ul>
<li class="level1"><div class="li"> The internet is similar to a mailbox system, but instead of delivering letters it delivers its information in bits</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A bit is binary code because it has only two possible values</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> 8 bits= 1 byte</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> 1024 bytes = 1 kilobytes</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> 1024 kilobytes = 1 megabyte</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A song is made using 3 to 4 megabytes (<abbr title="Megabyte">MB</abbr>)</div>
</li>
</ul>

<p>
How we send bits
</p>
<ul>
<li class="level1"><div class="li"> Electricity</div>
</li>
</ul>
<ol>
<li class="level1"><div class="li"> the operators use 0 and 1 to communicate to turn on the light and turn off the light. </div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> A timer can be used so that the sender and the receiver could communicate better when they are turning on/off the lights. </div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Suppose you want to send one bit per second, you would turn it to 0 at one point and turn it to 1 at another point. </div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> However, this is way too slow. To increase the number of bits sent per second, we will need to increase the bandwidth (maximum transition capacity of a device). </div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Bandwidth is measured by bit rate (Number of bits that we can send over a given period of time, usually measured in seconds). </div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Latency is another form of measurement, Time it takes for a bit to go from sender to receiver</div>
</li>
</ol>
<ul>
<li class="level1 node"><div class="li"> Light</div>
<ol>
<li class="level2"><div class="li"> Used to send a bit faster through long distances</div>
</li>
</ol>
</li>
</ul>
<ol>
<li class="level1"><div class="li"> A fiber optic cable is used to send bits through light</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> No signal loss</div>
</li>
</ol>
<ol>
<li class="level1 node"><div class="li"> Expensive</div>
<ol>
<li class="level2"><div class="li"> Hard to work with</div>
</li>
</ol>
</li>
</ol>
<ul>
<li class="level1 node"><div class="li"> Radio</div>
<ol>
<li class="level2"><div class="li"> Short range</div>
</li>
</ol>
</li>
</ul>
<ol>
<li class="level1"><div class="li"> Send wirelessly</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Uses radio signal to send bits from one place to another</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Machines have to translate binary messages to radio waves</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Wireless router to physical router</div>
</li>
</ol>

<p>
<strong>Lesson 4: Number Systems</strong>
</p>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> We can make various place patterns</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The rules for a number system to be accurate is to have a pattern that you follow. For example, we can use math and order the objects to make different sets and variations by using decimal places.</div>
</li>
</ul>

<p>
<strong>Lesson 5: Binary Numbers</strong>
</p>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> The number system only consists of 0s and 1s and we have to figure out how to encode that using place values which is harder than the 10-number system where you just simply see the exact number in the tenths, hundredths, or thousands place value.</div>
</li>
</ul>

<p>
<strong>Lesson 6: Sending Numbers</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Protocol- a set of rules governing the exchange or transmission of data between devices</div>
</li>
</ul>

<p>
<strong>Quick Question</strong>:
</p>

<p>
You have a coordinate grid that is 75 x 75. Assuming that you encode the x and y coordinate as
</p>

<p>
separate numbers, what is the minimum number of bits that you will need to encode a coordinate
</p>

<p>
in that space?
</p>

<p>
a)16
</p>

<p>
b)14
</p>

<p>
c)13
</p>

<p>
d)10
</p>

<p>
<strong>Answer</strong>: c
</p>

<p>
<strong>Lesson 7: Sending Text</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Abstraction- a simplified representation of something complex. These allow you to hide details to help you manage complexity, focus on relevant concepts, and reason about problems at a higher level.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <abbr title="American Standard Code for Information Interchange">ASCII</abbr> - American Standard Code for Information Interchange</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Protocol - A set of rules governing the exchange or transmission of data between devices</div>
</li>
</ul>

<p>
<strong>Quick Question:</strong>
</p>

<p>
What is the minimum number of bits you need to encode the 26 letters of the alphabet plus a space?
</p>
<ol>
<li class="level1"><div class="li"> 2 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 3 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 4 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 5 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 6 bits</div>
</li>
</ol>

<p>
<strong>Answer:</strong> d
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
The standard QWERTY keyboard has 47 keys that can place characters on the screen. Each of these keys can also display a second character by holding the “Shift” key at the same time. How many bits would you need to encode everything that could be typed on this keyboard?
</p>
<ol>
<li class="level1"><div class="li"> 3 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 4 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 5 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 6 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 7 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 12 bits</div>
</li>
</ol>

<p>
<strong>Answer</strong>: e
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
<abbr title="American Standard Code for Information Interchange">ASCII</abbr> has an encoding for every character of the alphabet as well as encodings for numbers – that is, encodings for the symbols of the digits 0-9. So here is a trick question: How many bits are required to store the text of the number “150” in <abbr title="American Standard Code for Information Interchange">ASCII</abbr>?&#039;
</p>
<ol>
<li class="level1"><div class="li"> 3 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 8 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 16 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 24 bits</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 32 bits</div>
</li>
</ol>

<p>
<strong>Answer:</strong> d
</p>

<p>
<strong>Unit 1- The Internet</strong>
</p>

<p>
<strong>Chapter 2</strong>
</p>

<p>
<strong>Lesson 8: The Internet</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> IETF- Internet Engineering Task Force- develops and promotes voluntary Internet standards and protocols, in particular the standards that comprise the Internet protocol suite (TCP/IP)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Internet- a huge computer network linking computer systems around the world; provides information and communication services</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Net Neutrality- the principle that all Internet traffic should be treated equally by Internet Service Providers</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
What it the Internet?
</p>
<ul>
<li class="level1"><div class="li"> Not many people know how the Internet actually works, it’s just seems like a simple daily part of our lives</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The Internet is made up of many independently operated networks</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> An area for sharing information</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Making informed choices to support or oppose decisions the government makes about access to the Internet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Making informed choices about privacy on the Internet</div>
</li>
</ul>

<p>
Vint Cerf states that “The Internet is for Everyone…”
</p>

<p>
<strong>Lesson 9: The Need for Addressing</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> IP Address- a number assigned any item that is connected to the Internet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Packet– A small block of information formed from a larger block of information that is sent over a network.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Protocol- a set of rules governing the exchange or transmission of data between devices</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
IP Addresses &amp; <abbr title="Domain Name System">DNS</abbr>
</p>
<ul>
<li class="level1"><div class="li"> Before the 1980s, you couldn’t really communicate over the internet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Vint Cerf and Bob Kahn created Internetworking protocol to allow communication on the Internet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A laptop or phone is connected to Wi-Fi, the Wi-Fi connection connects to an ISP (Internet Service Provider), and finally the ISP connects to billions of devices all around the world</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The Internet is a <strong>design philosophy</strong> and an architecture that is connected to protocols</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Each device that uses the Internet has a unique address consisting of numbers.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> IP (Internet Protocol) Address</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> An IP address has many parts, each of the numbers are represented in bits</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Traditional IP addresses are 32 bits long</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> IPv4 has 4 billion unique addresses</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> IPv6 is advanced with 340 undecillion unique IP Addresses</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <abbr title="Domain Name System">DNS</abbr> (Domain Name System) associates websites names such as <a href="http://www.code.org/" class="urlextern" target="_blank" title="http://www.code.org/" rel="ugc nofollow noopener">www.code.org</a> with an IP address that directs the computer to a specific website</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> One <abbr title="Domain Name System">DNS</abbr> is not qualified enough to handle all of the requests for website IP addresses</div>
</li>
</ul>
<blockquote><div class="no">
 associated, therefore there are multiple groups of <abbr title="Domain Name System">DNS</abbr> servers such as .com,.org, .net, etc. </div></blockquote>

<p>
<a href="/dokuwiki/lib/exe/detail.php?id=ap_computer_science_principles&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:untitled.png" class="media" title="ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:untitled.png"><img src="/dokuwiki/lib/exe/fetch.php?w=400&amp;tok=1f9f23&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:untitled.png" class="media" loading="lazy" alt="" width="400" /></a>
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
How many unique IP addresses could be made in a fixed length IP address system using 6 bits?
</p>
<ol>
<li class="level1"><div class="li"> 6 users</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 12 users</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 32 users</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> 64 users</div>
</li>
</ol>

<p>
<strong>Answer:</strong> D
</p>

<p>
<strong>Lesson 10: Routers and Redundancy</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Network Redundancy- Having multiple backups to ensure Reliability during cases of high usage or failure</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Router- a type of computer that forwards data across a network</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> A package traveling between two computers on the Internet may be rerouted many times along the way</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A packet contains addressing information to allow routers to decide how best to forward</div>
</li>
</ul>

<p>
along that packet towards its destination <strong>Lesson 11: Packets and Making a Reliable Internet Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Packets- small chunks of information that have been carefully formed from larger chunks of information.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> TCP: transmission control protocol- provides reliable, order, and error – checked delivery of a stream of packets on the Internet. TCP tightly linked with IP and usually seen as TCP/IP in writing</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
The Internet: Packets, Routing, and Reliability
</p>
<ul>
<li class="level1"><div class="li"> For information to get from one computer to another, there is not a specific route that must be followed, it can vary</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Information travels from one device to another in a packet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Similar to car traffic, a packet can change directions based on obstructions. All packets take different routes</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Suppose you want to send a picture from your phone to your laptop, one single packet would not be enough to do this job. The picture is broken into multiple packets that have various paths</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Routers act like traffic managers to keep the packets moving through networks smoothly</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Routers use the “cheapest” way to get a packet through using the IP address and destination. “Cheapest” = time, politics, relationship</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Fault tolerant- not many errors since there are many paths (Reliability)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> TCP (Transmission Control Protocol) manages the sending and receiving of all your data as packets. It makes sure that every single packet is available from the sender before signing off for the delivery to the receiver.</div>
</li>
</ul>

<p>
<strong>Lesson 12: The Need for <abbr title="Domain Name System">DNS</abbr></strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <abbr title="Domain Name System">DNS</abbr>- short Domain Name System, this system translates domain names (like example.com) to IP addresses (like 93.184.216.34)</div>
</li>
</ul>

<p>
<strong>Lesson 13: HTTP and Abstraction</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <abbr title="Domain Name System">DNS</abbr> - short for Domain Name System, this system translates domain names to IP addresses</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> HTTP - HyperText Transfer Protocol - the protocol used for transmitting web pages over the Internet</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> IP Address - A number assigned to any item that is connected to the Internet.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> TCP - Transmission Control Protocol - provides reliable, ordered, and error-checked delivery of a stream of packets on the internet. TCP is tightly linked with IP and usually seen as TCP/IP in writing.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <abbr title="Uniform Resource Locator">URL</abbr> - An easy-to-remember address for calling a web page (like <a href="http://www.code.org" class="urlextern" target="_blank" title="http://www.code.org" rel="ugc nofollow noopener">www.code.org</a>)</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> HTTP request make use of abstractions provided by lower level protocols</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A HTTP request is sent from a client to request access to data stored on a server</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Displaying a webpage will usually require a lot of HTTP requests in order to acquire all the necessary data</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unit 1- The Internet&quot;,&quot;hid&quot;:&quot;unit_1-_the_internet&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:2,&quot;range&quot;:&quot;249-11138&quot;} -->
<h2 class="sectionedit3" id="unit_2-_digital_information">Unit 2- Digital Information</h2>
<div class="level2">

<p>
<strong>Lesson 1: Bytes and File Sizes</strong>
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
The salesperson in a cell phone store is telling me that the phone I&#039;m considering has 8GB of memory, which means I can save 10,000 photos taken with the phone&#039;s camera!
</p>

<p>
Is the salesperson telling me the truth? Why or why not?
</p>

<p>
<strong>Answer:</strong> No, the salesperson is lying because there are about 2-5 megabytes per photo so that means there is at least 20,000 megabytes in total. These megabytes convert into 20 gigabytes which is much more than we have.
</p>

<p>
<strong>Lesson 2: Text Compression</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Heuristic - a problem solving approach (algorithm) to find a satisfactory solution where finding an exact solution is impractical.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Lossless Compression - a data compression algorithm that allows the original data to be perfectly reconstructed from the compressed data.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Lossy Compression - (or irreversible compression) a data compression method that uses inexact approximations, discarding some data to represent the content. Most commonly seen in image formats like .jpg.</div>
</li>
</ul>

<p>
<strong>Lesson 3: Encoding B&amp;W Images</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Image - A type of data used for graphics or pictures.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Metadata - is data that describes other data. For example, a digital image may include metadata that describe the size of the image, number of colors, or resolution.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Pixel - short for “picture element”, the fundamental unit of a digital image, typically a tiny square or dot that contains a single point of color of a larger image.</div>
</li>
</ul>

<p>
<strong>Lesson 4: Encoding Color Images</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Hexadecimal - A base-16 number system that uses sixteen distinct symbols 0-9 and A-F to represent numbers from 0 to 15.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Pixel - short for “picture element”, the fundamental unit of a digital image, typically a tiny square or dot that contains a single point of color of a larger image.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> RGB - the RGB color model uses varying intensities of (R)ed, (G)reen, and (B)lue light are added together in to reproduce a broad array of colors.</div>
</li>
</ul>

<p>
<strong>Lesson 5: Lossy vs Lossless Compression</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Lossless Compression - a data compression algorithm that allows the original data to be perfectly reconstructed from the compressed data.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Lossy Compression - (or irreversible compression) a data compression method that uses inexact approximations, discarding some data to represent the content. Most commonly seen in image formats like .jpg.</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Lossless compression is fully reversible, meaning the original file can be re-created it for a bit</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Lossy compression is best suited for situations where some loss of detail is tolerable, especially if it will not be detectable by a human</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unit 2- Digital Information&quot;,&quot;hid&quot;:&quot;unit_2-_digital_information&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:3,&quot;range&quot;:&quot;11139-13835&quot;} -->
<h2 class="sectionedit4" id="unit_3-_intro_to_programming">Unit 3- Intro to Programming</h2>
<div class="level2">

<p>
<strong>Lesson 1: The Need for Programming Languages</strong>
</p>

<p>
<strong>IMPORTANT!! (will be a part of the AP exam task (Create Task))</strong>
</p>

<p>
<strong>Abstraction:</strong> abstraction reduces information and detail to facilitate focus on relevant concepts. It is a process, a strategy, and the result of reducing detail to focus on concepts relevant to understanding and solving problems
</p>

<p>
<strong>Algorithm:</strong> an algorithm is a precise sequence of instructions for a process that can be executed by a computer. They are expressed using languages, and can solve many, but not all problems.
</p>

<p>
<strong>Lesson 2: The Need for Algorithms</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Algorithm - A list of steps to finish a task.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> High Level Programming Language - A programming language with many commands and features designed to make common tasks easier to program. Any high level functionality is encapsulated as combinations of low level commands.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Low Level Programming Language - A programming language that captures only the most primitive operations available to a machine. Anything that a computer can do can be represented with combinations of low level commands</div>
</li>
</ul>

<p>
<strong>Lesson 3: Creativity in Algorithms</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Algorithm - A list of steps to finish a task.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Iterate- to repeat in order to achieve, or get closer to, a desired goal</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Selection- a generic term for a type of programming statement (usually an if-statement) that uses a Boolean condition to determine, or select, whether or not to run a certain block of statements</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Sequencing - Putting commands in correct order so computers can read the commands</div>
</li>
</ul>

<p>
<strong>Lesson 4: Using Simple Commands</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Pair Programming - A method of programming in which two programmers write code using a single computer. One programmer in the “driver” role uses the mouse and keyboard to actually write the code while a second acts as a “navigator”, keeping track of the big picture, catching errors, and making suggestions. Programmers switch roles frequently and communicate throughout the process.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Turtle Programming - a classic method for learning programming with commands to control movement and drawing of an on-screen robot called a “turtle”. The turtle hearkens back to early implementations in which children programmed a physical robot whose dome-like shape was reminiscent of a turtle.</div>
</li>
</ul>

<p>
<strong>Lesson 5: Creating Functions (Important Lesson)</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Abstraction - a simplified representation of something more complex. Abstractions allow you to hide details to help you manage complexity, focus on relevant concepts, and reason about problems at a higher level.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Function - A named bit of programming instructions</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<blockquote><div class="no">
 Introduction to Functions</div></blockquote>
<ul>
<li class="level1"><div class="li"> When you demand a new command and give it a name it’s called a function</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Functions are like building blocks and once they are given their command they can be called using their names and build up a larger project</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Steps to creating functions in JavaScript</div>
</li>
</ul>
<ol>
<li class="level1 node"><div class="li"> Defined the function (give a single name to represent the set of actions)</div>
<ol>
<li class="level2"><div class="li"> Call it (type the name of the function followed by a parentheses)</div>
</li>
</ol>
</li>
</ol>
<ul>
<li class="level1"><div class="li"> Using the turtle commands, we’ve been already calling functions that were created by the computer. Now, it’s time to make our own functions giving our own names and calling it on our own</div>
</li>
</ul>
<ul>
<li class="level1 node"><div class="li"> Defining a function:</div>
<ol>
<li class="level2"><div class="li"> function [function name] () { [write commands/steps]</div>
</li>
</ol>
</li>
</ul>
<blockquote><div class="no">
 }</div></blockquote>
<ul>
<li class="level1 node"><div class="li"> Calling a function:</div>
<ol>
<li class="level2"><div class="li"> [function name] ();</div>
</li>
</ol>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> You can call the function anywhere in the program</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> You can call the function as many times as you would like</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> To keep things organized in the code, defining the function is usually placed right after the calling of a function</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> In JavaScript they are called functions, but the generic term is procedure</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Give functions it meaningful name</div>
</li>
</ul>

<p>
<strong>Quick Question:</strong>
</p>

<p>
Choose the statements that are true about functions (multiple right answers)
</p>
<ol>
<li class="level1"><div class="li"> meaningful function names that help people better understand programs</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> meaningful function names that help computers better understand programs</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> functions in programming are useful mathematical tools for doing complex computations</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> functions in programming are named groupings of programming instructions</div>
</li>
</ol>

<p>
<strong>Answer:</strong> a&amp;d
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
Which of the following is NOT true about functions?
</p>
<ol>
<li class="level1"><div class="li"> functions are reusable programming abstractions</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> functions can help simplify the writing and maintaining of programs</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> functions help break a problem into logical chunks</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> once defined, a function can be called many times from different parts of a program</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> functions can’t make calls to other functions written by the same programmer</div>
</li>
</ol>

<p>
<strong>Answer:</strong> e
</p>

<p>
<strong>Lesson 6: Functions and Top-Down Design</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Abstraction - a simplified representation of something more complex. Abstractions allow you to hide details to help you manage complexity, focus on relevant concepts, and reason about problems at a higher level.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Function - A named bit of programming instructions</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Top-Down Design- a problem-solving approach (also known as a stepwise design) in which you break a system to gain insight into the subsystems that make it up</div>
</li>
</ul>

<p>
<strong>Quick Question:</strong>
</p>

<p>
Which of the following statements about writing functions and Top-Down Design is NOT true?
</p>
<blockquote><div class="no">
 a) Writing functions helps manage complexity in a program</div></blockquote>
<ol>
<li class="level1"><div class="li"> Top-Down Design leads to programs which feature of multiple layers of abstraction</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> To programmers solving the same problem using Top-Down Design should arrive at identical programs</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Top-Down Design relies upon identifying subproblems of a larger problem</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Top-Down Design assist in identifying the layers of functions that will be used to solve a programming problem</div>
</li>
</ol>

<p>
<strong>Answer: c</strong>
</p>

<p>
<strong>Lesson 7: APIs and Function Parameters</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <abbr title="Application Programming Interface">API</abbr> (Application Program Interface) - a collection of commands made available to a programmer</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Documentation - a description of the behavior of a command, function, library, <abbr title="Application Programming Interface">API</abbr>, etc.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Hexadecimal - A base-16 number system that uses sixteen distinct symbols 0-9 and A-F to represent numbers from 0 to 15.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Library - a collection of commands / functions, typically with a shared purpose</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Parameter - An extra piece of information passed to a function to customize it for a specific need</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Function parameter is a way to give input to a function that controls how the function runs</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Parameters can be used for anything, such as coordinate points.</div>
</li>
</ul>
<blockquote><div class="no">
 -</div></blockquote>

<p>
<strong>Lesson 8: APIs and Function Parameters</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Parameter - An extra piece of information passed to a function to customize it for a specific need</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
Functions with Parameters
</p>
<ul>
<li class="level1"><div class="li"> The moveForward command is not specific but with a parameter that identifies how many spaces forward it moves its more clear</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Perimeter: a name value provided as input to a function</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Generalized behavior such as repetition in code per function can be represented with the parameter</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The name of the function and perimeter must be meaningful</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The parameter value acts as a placeholder</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The value of the parameter is stored in the calling function</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Parameters give code much more flexibility and control</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Giving the parameters a value is not part of defining a function</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Functions with parameters can be used to prevent the creation of duplicated code</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Parameters help generalize the solution of a specific problem</div>
</li>
</ul>

<p>
Comments
</p>
<ul>
<li class="level1"><div class="li"> A way to leave notes in code, doesn’t affect the running of the program at all</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Used for a clear understanding for the programmer before actually writing code and is used as guidance throughout the code</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Used for sharing code with other programmers</div>
</li>
</ul>

<p>
<strong>Lesson 9: Looping and Random Numbers</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> For Loop - Loops that have a predetermined beginning, end, and increment (step interval).</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Loop - The action of doing something over and over again</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Loops are used as a way to define and control behavior that repeats</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Types of loops:</div>
</li>
</ul>
<ol>
<li class="level1"><div class="li"> FOR-LOOP</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> WHILE-LOOP</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> DO-WHILE-LOOP</div>
</li>
</ol>
<ol>
<li class="level1 node"><div class="li"> FOR-EACH LOOP</div>
<ol>
<li class="level2"><div class="li"> REPEAT LOOP</div>
</li>
</ol>
</li>
</ol>
<ul>
<li class="level1"><div class="li"> Generic term for loops: Iteration (usually refers to repetition of a process or procedure)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> For-Loop in JavaScript seems complex but really only count up to whatever number is entered. The commands inside the loop are run that many times</div>
</li>
</ul>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unit 3- Intro to Programming&quot;,&quot;hid&quot;:&quot;unit_3-_intro_to_programming&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:4,&quot;range&quot;:&quot;13836-22240&quot;} -->
<h2 class="sectionedit5" id="unit_4-_big_data_and_privacy">Unit 4- Big Data and Privacy</h2>
<div class="level2">

<p>
<strong>Lesson 1: What is Big Data?</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Big Data - a broad term for datasets so large or complex that traditional data processing applications are inadequate.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Moore&#039;s Law - a predication made by Gordon Moore in 1965 that computing power will double every 1.5-2 years, it has remained more or less true ever since</div>
</li>
</ul>

<p>
<strong>Quick Question:</strong>
</p>

<p>
Historically it has been observed that computer processing speeds tend to double every two years. This is known as
</p>
<ol>
<li class="level1"><div class="li"> Boolean’s Conjecture</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Moore’s Law</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> The “Big Data Effect”</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Powers of 2 Principle</div>
</li>
</ol>

<p>
<strong>Answer:</strong> b
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
When a computer scientist uses the term “Big Data” what do they typically mean?
</p>
<ol>
<li class="level1"><div class="li"> That a dataset is larger than 5TB which is a common “Big Data” threshold</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> That there is so much data it’s virtually impossible to process</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> There’s enough data that traditional data processing applications are inadequate</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> It implies that the findings from the data are potentially hugely important for society</div>
</li>
</ol>

<p>
<strong>Answer:</strong> c
</p>

<p>
<strong>Lesson 2: Finding Trends with Visualization</strong>
</p>

<p>
(simple, straightforward)
</p>

<p>
<strong>Lesson 3: Check your assumptions</strong>
</p>

<p>
(simple, straightforward)
</p>

<p>
<strong>Lesson 4: Rapid Research- Data Innovations</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> One-pager - A business/corporate term for a one-page document that summarizes a large issue, topic or plan.</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
Data &amp; Medicine
</p>
<ul>
<li class="level1"><div class="li"> Code is used everywhere, even in the field of medicine</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Each person and organism has a different sequence of DNA, this is how they identify any viruses or diseases visible in a person’s DNA</div>
</li>
</ul>

<p>
<strong>Lesson 5: Identifying People with Data</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Computing Innovation- a computer program that uses programming code as an essential part of its functionality</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Examples:</div>
</li>
</ul>
<ol>
<li class="level1"><div class="li"> 3D Printing</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Social Media (Snap, Instagram)</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Public Data</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Search Trends</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Global Positioning Systems (GPS)</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Sensors and Sensor Networks</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Smart Things (Grid, Houses, Transportation)</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> The Internet of Things</div>
</li>
</ol>

<p>
<strong>Lesson 6: The Cost of Free</strong>
</p>

<p>
<strong>Quick Question:</strong>
</p>

<p>
Which of the following statements is the LEAST TRUE about personal data that technology companies potentially collect about their users?
</p>
<ol>
<li class="level1"><div class="li"> Companies frequently offer services free of charge in exchange for access to data about their users</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Personal data about users may be saved by a company permanently, never to be deleted</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Companies can sell the personal information of users to advertisers or other businesses</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Companies are required by law to give users options to personalize what data they collect about them</div>
</li>
</ol>

<p>
<strong>Answer:</strong> d
</p>

<p>
<strong>Lesson 7: Simple Encryption</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Caesar Cipher - a technique for encryption that shifts the alphabet by some number of characters</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Cipher - the generic term for a technique (or algorithm) that performs encryption</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Cracking encryption - When you attempt to decode a secret message without knowing all the specifics of the cipher, you are trying to “crack” the encryption.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Decryption - a process that reverses encryption, taking a secret message and reproducing the original plain text</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Encryption - a process of encoding messages to keep them secret, so only “authorized” parties can read it.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Random Substitution Cipher - an encryption technique that maps each letter of the alphabet to a randomly chosen other letters of the alphabet.</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Keep SSN private and only tell people that are reliable sources. Privacy is maintained on the internet because most websites have passwords</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The “key” to decrypting the Caesar Cipher is the number of characters to shift each letter in the alphabet</div>
</li>
</ul>

<p>
<strong>Lesson 8: Encryption with Keys and Passwords Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Computationally Hard - a “hard&#039; problem for a computer is one in which it cannot arrive at a solution in a reasonable amount of time.</div>
</li>
</ul>
<blockquote><div class="no">
 Notes:</div></blockquote>

<p>
Encryption and public keys
</p>
<ul>
<li class="level1"><div class="li"> Encryption: scrambling or changing a message to hide it, makes the Internet a little bit more private preventing any leakage of personal information</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Decryption: unscrambling the message to make it readable</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Caesar cipher what is one of the main types of encryption (named after Julius Caesar who was a Roman general, he encrypted his military commands so that the enemy wouldn’t be able to read it)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Caesar cipher uses an algorithm. Associates each number in the alphabet with a certain Number of steps below or above a certain letter. The amount it goes up or down by is known as the key and only the sender and receiver will know it</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Key: allows the leader to unlock the secret message</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> To make Caesar cipher more complex and harder to decrypt by everyone, the concept of changing each letter by a different amount of spaces came in to place. A 10 digit key with each number representing a single letter will allow more complication for people who do not have the key to decrypt the message</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> With a 10 digit key,</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Where are more than 10 million possibilities in so it would be very hard for people who do not have the key to unscramble the message</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> A computer is much faster than a human, and therefore, it can go through all the possibilities very easily and quickly. This would be simple for hackers to find information on computers.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> 256 bit encryption makes it much harder for the computer to decrypt a message</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> The speed of computers keeps growing exponentially. Soon, even 256 bit encryption might not be safe enough</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Symmetric encryption: the same key used to encrypt and decrypt, the secret key that must be known between two people. This works for people but for computers everything is open on the Internet. It’s difficult for two computers to meet private and share the key.</div>
</li>
</ul>
<blockquote><div class="no">
 Therefore, computers use asymmetric encryption</div></blockquote>
<ul>
<li class="level1"><div class="li"> Asymmetric encryption: used by a computer. Different keys for encrypting and decrypting</div>
</li>
</ul>
<blockquote><div class="no">
 o Public key: shared with everybody so anybody can encrypt a message o Private key: can only be decrypted by a computer with access </div></blockquote>
<ul>
<li class="level1"><div class="li"> Security protocols:</div>
</li>
</ul>
<ol>
<li class="level1 node"><div class="li"> SSL (Secure Sockets Layer)</div>
<ol>
<li class="level2"><div class="li"> TLS (Transport Layer Security)</div>
</li>
</ol>
</li>
</ol>
<ul>
<li class="level1"><div class="li"> As computers develop, it becomes harder and harder to keep private information safe</div>
</li>
</ul>

<p>
<strong>Quick Question:</strong>
</p>

<p>
What is the difference between “cracking” a code and “decrypting” a message?
</p>

<p>
<strong>Answer:</strong> Cracking the code is done by trying various possibilities and finally getting to the right one. Decrypting a message is when the key is available and is used with strategy to unlock the message
</p>

<p>
<strong>Lesson 9: Public Key Crypto</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> asymmetric encryption - used in public key encryption, it is scheme in which the key to encrypt data is different from the key to decrypt.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> modulo - a mathematical operation that returns the remainder after integer division. Example: 7 MOD 4 = 3</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Private Key - In an asymmetric encryption scheme the decryption key is kept private and never shared, so only the intended recipient has the ability to decrypt a message that has been encrypted with a public key.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Public Key Encryption - Used prevalently on the web, it allows for secure messages to be sent between parties without having to agree on, or share, a secret key. It uses an asymmetric encryption scheme in which the encryption key is made public, but the decryption key is kept private.</div>
</li>
</ul>

<p>
<strong>Lesson 10: Rapid Research- Cybercrime</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Antivirus Software - usually keeps big lists of known viruses and scans your computer looking for the virus programs in order to get rid of them.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> DDoS Attack - Distributed Denial of Service Attack. Typically a virus installed on many computers (thousands) activate at the same time and flood a target with traffic to the point the server becomes overwhelmed.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Firewall - software that runs on servers (often routers) that only allows traffic through according to -some set of security rules.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Phishing Scam - a thief trying to trick you into sending them sensitive information. Typically these include emails about system updates asking you send your username and password, social security number or other things.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> SSL/TLS - Secure Sockets layer / Transport Layer Security - An encryption layer of HTTP that uses public key cryptography to establish a secure connection.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Virus - a program that runs on a computer to do something the owner of the computer does not intend.</div>
</li>
</ul>

<p>
<strong>Notes:</strong>
</p>

<p>
Internet: Cyber Security and Crime
</p>
<ul>
<li class="level1"><div class="li"> Cybercrime causes huge problems for families and society personally, financially, and in national security</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Exploiting vulnerabilities hardware and software and unintentional decisions made by people using the software lead to</div>
</li>
</ul>
<blockquote><div class="no">
 o Stolen credit card numbers o Social Security numbers healthcare records compromised o Hacking o Drones being hijacked </div></blockquote>
<ul>
<li class="level1"><div class="li"> A virus comes into the computer unintentionally and it is possible for it to spread to other computers</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Ways a virus can come into a computer:</div>
</li>
</ul>
<ol>
<li class="level1 node"><div class="li"> Fake install</div>
<ol>
<li class="level2"><div class="li"> Security back door</div>
</li>
</ol>
<ul>
<li class="level2 node"><div class="li"> When a virus enters a computer, it can…</div>
<ol>
<li class="level3"><div class="li"> Steal and delete</div>
</li>
</ol>
</li>
</ul>
</li>
</ol>
<ol>
<li class="level1 node"><div class="li"> Control programs</div>
<ol>
<li class="level2"><div class="li"> Remote operation</div>
</li>
</ol>
<ul>
<li class="level2"><div class="li"> Only 10% of the time, hacking happens because of a security bug. Other 90% of the time it’s because of a simple mistake a person has made (YOU)</div>
</li>
<li class="level2 node"><div class="li"> Steps we all must take to avoid getting hacked</div>
<ol>
<li class="level3"><div class="li"> Use strong password</div>
</li>
</ol>
</li>
</ul>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Check for authentic web addresses</div>
</li>
</ol>
<ol>
<li class="level1"><div class="li"> Install system security updates often. Don’t install software you don’t trust</div>
</li>
</ol>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unit 4- Big Data and Privacy&quot;,&quot;hid&quot;:&quot;unit_4-_big_data_and_privacy&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:5,&quot;range&quot;:&quot;22241-31727&quot;} -->
<h2 class="sectionedit6" id="unit_5-_building_apps">Unit 5- Building Apps</h2>
<div class="level2">

<p>
<strong>Chapter 1: Event-Driven Programming</strong>
</p>

<p>
<strong>Lesson 1: Buttons and Events</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Callback function - a function specified as part of an event listener; it is written by the programmer but called by the system as the result of an event trigger.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event - An action that causes something to happen.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event-driven program - a program designed to run blocks of code or functions in response to specified events (e.g. a mouse click)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event handling - an overarching term for the coding tasks involved in making a program respond to events by triggering functions.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event listener - a command that can be set up to trigger a function when a particular type of event occurs on a particular UI element.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> UI Elements - on-screen objects, like buttons, images, text boxes, pull down menus, screens and so on.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> User Interface - The visual elements of a program through which a user controls or communicates with the application. Often abbreviated UI.</div>
</li>
</ul>
<blockquote><div class="no">
 Notes: Introduction to Design Mode </div></blockquote>
<ul>
<li class="level1"><div class="li"> Go to “Design” on the top of the app screen</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> There are many options in the toolbox that you could drag in as elements into your app</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> There are buttons, text inputs, labels, drop downs, check boxes, charts, text areas, images, etc.</div>
</li>
</ul>

<p>
<a href="/dokuwiki/lib/exe/detail.php?id=ap_computer_science_principles&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image26.png" class="media" title="ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image26.png"><img src="/dokuwiki/lib/exe/fetch.php?w=400&amp;tok=98dca2&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image26.png" class="media" loading="lazy" alt="" width="400" /></a>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>onEvent(“id”, “click”, function( ) {…});</strong> is used to create interaction in the app, the various parameters must be chosen</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>setPosition(“id”, 0, 0, 100, 100);</strong></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>setSize(“id”, 100, 100);</strong></div>
</li>
</ul>

<p>
<strong>Lesson 2: Multi-Screen apps</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Debugging - Finding and fixing problems in an algorithm or program.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event-driven program - a program designed to run blocks of code or functions in response to specified events (e.g. a mouse click)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event handling - an overarching term for the coding tasks involved in making a program respond to events by triggering functions.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>setScreen (screenId)</strong> is used to set a screen to a particular one of the screens in the app</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>console.log</strong> is used to output a message in the web cancel</div>
</li>
</ul>

<p>
<strong>Lesson 3: Building an App: Multi-Screen App Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Event-driven program - a program designed to run blocks of code or functions in response to specified events (e.g. a mouse click)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Event handling - an overarching term for the coding tasks involved in making a program respond to events by triggering functions.</div>
</li>
</ul>

<p>
<strong>Lesson 4: Controlling Memory with Variables Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Data Type - All values in a programming language have a “type” - such as a Number, Boolean, or String - that dictates how the computer will interpret it. For example 7+5 is interpreted differently from “7”+“5”</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Expression - Any valid unit of code that resolves to a value.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Variable - A label for a piece of information used in a program.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>write (text)</strong> displays a string and/or variable values to a screen</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>value1 + value2</strong> add two strings together</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>num1 – num2</strong> subtracts two numbers</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>num1 * num2</strong> multiplies two numbers</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>num1 / num2</strong> divides two numbers</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>randomNumber</strong> returns a random number in the closed range from min to max</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var x = _;</strong> declares an assigned an initial value to a variable</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>x=_;</strong> assigns a value to a previously declared variable</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var x = promptNum(“Enter a value”); d</strong>eclares a variable and prompts the user for the initial numeric value</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var x = “_”;</strong> declares an assigned an initial value to a variable</div>
</li>
</ul>

<p>
<strong>Lesson 5: Build an App: Clicker Game</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> = = - The equality operator (sometimes read: “equal equal”) is used to compare two values and returns a Boolean (true/false). Avoid confusion with the assignment operator ”=“,</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Global Variable - A variable whose scope is “global” to the program, it can be used and updated by any part of the code. Its global scope is typically derived from the variable being declared (created) outside of any function, object, or method.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If-Statement - The common programming structure that implements “conditional statements”.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Local Variable - A variable with local scope is one that can only be seen, used and updated by code within the same scope. Typically, this means the variable was declared (created) inside a function – includes function parameter variables.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Variable Scope - dictates what portions of the code can “see” or use a variable, typically derived from where the variable was first created. (See Global v. Local)</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>setText(id,text)</strong> sets the text for the specified screen element</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>if(){//code}</strong> executes a block of statements if the specific condition is true</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ = = _</strong> tests whether two values are equal</div>
</li>
</ul>

<p>
<strong>Lesson 6: User Input and Strings</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Concatenate - to link together or join. Typically used when joining together text Strings in programming (e.g. “Hello, ”+name)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> String - Any sequence of characters between quotation marks (ex: “hello”, “42”, “this is a string!”).</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>getText (id)</strong> gets a text from the specified screen element</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var x = prompt(“Enter a value”);</strong> declares a variable and prompts the user for its initial value</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>str. toUpperCase</strong> returns a new string that is the original stream converted to all uppercase letters</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>str. toLowerCase</strong> returns a new string that is the original stream converted to all lowercase letters</div>
</li>
</ul>

<p>
<strong>Lesson 7: “If” Statements Unplugged</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Conditionals - Statements that only run when certain conditions are true.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If-Statement - The common programming structure that implements “conditional statements”.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Selection - A generic term for a type of programming statement (usually an if-statement) that uses a Boolean condition to determine, or select, whether or not to run a certain block of statements.</div>
</li>
</ul>

<p>
<strong>Lesson 8: Boolean Expressions and “If” Statements Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Boolean - A single value of either TRUE or FALSE</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Boolean Expression - in programming, an expression that evaluates to True or False.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Conditionals - Statements that only run when certain conditions are true.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If-Statement - The common programming structure that implements “conditional statements”.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Selection - A generic term for a type of programming statement (usually an if-statement) that uses a Boolean condition to determine, or select, whether or not to run a certain block of statements.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>If (){//code}</strong> execute a block of statements if the specific condition is true</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>If (){//if code} else {// else code}</strong> Executes a block of statements if the specified condition is true; otherwise, the block of statements in the else clause are executed.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ = = _</strong> Tests whether two values are equal.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ != _</strong> Tests whether two values are not equal.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ &gt; _</strong> Tests whether a value is greater than another value</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_&gt;=_</strong> Tests whether a value is greater than or equal to another value</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ &lt; _</strong> Tests whether a value is less than another value</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_⇐_</strong> Tests whether a value is less than or equal to another value</div>
</li>
</ul>

<p>
<strong>Lesson 9: “if-else-if” and Conditional Logic</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Boolean - A single value of either TRUE or FALSE</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Boolean Expression - in programming, an expression that evaluates to True or False.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Conditionals - Statements that only run when certain conditions are true.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If-Statement - The common programming structure that implements “conditional statements”.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Selection - A generic term for a type of programming statement (usually an if-statement) that uses a Boolean condition to determine, or select, whether or not to run a certain block of statements.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>If (){//if code} else {// else code}</strong> Executes a block of statements if the specified condition is true; otherwise, the block of statements in the else clause are executed.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ &amp;&amp; _</strong> more complex decisions sometimes require two things to be true. This operator allows you to check if both expressions are true, and then possibly perform some specific action using an if,if-else, or while block</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>_ | | _</strong> returns true when either expression is true and false otherwise</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>!_</strong> returns false if the expression is true; otherwise, returns true</div>
</li>
</ul>

<p>
<strong>Lesson 10: Building an App: Color Sleuth</strong>
</p>

<p>
<strong>Vocab:</strong> Boolean Expression - in programming, an expression that evaluates to True or False.
</p>
<ul>
<li class="level1"><div class="li"> Conditionals - Statements that only run when certain conditions are true.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If-Statement - The common programming structure that implements “conditional statements”.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Selection - A generic term for a type of programming statement (usually an if-statement) that uses a Boolean condition to determine, or select, whether or not to run a certain block</div>
</li>
</ul>
<blockquote><div class="no">
 of statements. New Code:</div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>setProperty (id, property, value)</strong> You will generally want to define properties of UI elements using Design mode in App Lab. But sometimes you will want to change the value of a property in your app based on the user or in response to an</div>
</li>
</ul>
<blockquote><div class="no">
 event. setProperty() lets your app change any property listed in Design mode for a given UI element.</div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>rgb (r, g, b, a)</strong> Using RGBA values, creates colors for using in the background, shapes, lines and points.</div>
</li>
</ul>

<p>
<strong>Chapter 2: Programming with Data Structures</strong>
</p>

<p>
<strong>Lesson 11: While Loops</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Iterate - To repeat in order to achieve, or get closer to, a desired goal.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> while loop - a programming construct used to repeat a set of commands (loop) as long as (while) a boolean condition is true.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>while () {// code}</strong> executes a block of statements while the specified condition is true</div>
</li>
</ul>

<p>
<strong>Lesson 12: Loops and Simulations</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Models and Simulations - a program which replicates or mimics key features of a real world event in order to investigate its behavior without the cost, time, or danger of running an experiment in real life.</div>
</li>
</ul>

<p>
<strong>Lesson 13: Introduction to Arrays</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Array - A data structure in JavaScript used to represent a list.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> List - A generic term for a programming data structure that holds multiple items.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>list.length</strong> return the length of the array</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>insertItem(list, index, item)</strong> inserts the item into the array at the specified index position</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var list =[“a”, “b”, “d”];</strong> declares a variable and assigns it to an array with the given initial values</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>var x = [1,2,3,4];</strong> Declares a variable and assigns it to an array with the given initial values</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>appendItem (list,item)</strong> Appends the item to the end of the array.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>removeItem(list, index)</strong> Removes the item from the array at the specified index position.</div>
</li>
</ul>

<p>
<strong>Lesson 14: Building an App: Image Scroller</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Key Event - in JavaScript an event triggered by pressing or releasing a key on the keyboard. For example: “keyup” and “keydown” are event types you can specify. Use event.key - from the “event” parameter of the onEvent callback function - to figure out</div>
</li>
</ul>
<blockquote><div class="no">
 which key was pressed.</div></blockquote>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>onEvent(id, type, function(event)){…}</strong> interactive apps need both UI</div>
</li>
</ul>
<blockquote><div class="no">
 elements button, textInput, textLabel, dropdown, checkbox, radioButton, image, and event handlers for those UI elements and each type of user interaction needed. The UI element, with unique id, must exist before the onEvent function can be used.</div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>playSound(url)</strong> Plays the MP3 sound file from the specified <abbr title="Uniform Resource Locator">URL</abbr></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>setImageURL (id,url);</strong> Sets the <abbr title="Uniform Resource Locator">URL</abbr> for the specified image element id.</div>
</li>
</ul>

<p>
<strong>Lesson 15: Processing Arrays</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> for loop - A typical looping construct designed to make it easy to repeat a section of code using a counter variable. The for loop combines the creation of a variable, a boolean looping condition, and an update to the variable in one statement.</div>
</li>
</ul>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>for (var i=0; i&lt;4; i++){//code}</strong> Executes a block of statements a certain number of times depending on the initialization expression, conditional expression, and increment expression.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>function myFunction (n){//code}</strong> Gives a name to a set of parameter driven actions you want the computer to perform, and optionally return a value.</div>
</li>
</ul>

<p>
<strong>Lesson 16: Functions with Return Values</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Return Value - A value sent back by a function to the place in the code where the function was called from - typically asking for value (e.g. getText(id)) or the result of a</div>
</li>
</ul>
<blockquote><div class="no">
 calculation or computation of some kind. Most programming languages have many built-in functions that return values, but you can also write your own.</div></blockquote>

<p>
<strong>New Code:</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>return</strong> returns a value from a function</div>
</li>
</ul>

<p>
<strong>Lesson 17: Building an App: Canvas Painter</strong>
</p>

<p>
<strong>Vocab:</strong>
</p>
<ul>
<li class="level1"><div class="li"> Canvas - a user interface element to use in <abbr title="HyperText Markup Language">HTML</abbr>/JavaScript which acts as a digital canvas, allowing the programmatic drawing and manipulation of pixels, basic shapes, figures and images.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Key Event - in JavaScript an event triggered by pressing or releasing a key on the keyboard. For example: “keyup” and “keydown” are event types you can specify. Use event.key - from the “event” parameter of the onEvent callback function - to figure out which key was pressed.</div>
</li>
</ul>

<p>
<strong>New Code</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>setActiveCanvas</strong> Changes the active canvas to the canvas with the specified id (other canvas commands only affect the active canvas).</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>line</strong> Draws a line on the active canvas from (x1, y1) to (x2, y2).</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>circle</strong> Draws a circle on the active canvas with its center at the specified (x, y) location and with the specified radius</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>setStrokeColor</strong> Sets the stroke color for the active canvas</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>setFillColor</strong> Sets the fill color for the active canvas.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <strong>clearCanvas</strong> Clears all data on the active canvas</div>
</li>
</ul>

<p>
<strong>About the Exam</strong>
</p>
<ul>
<li class="level1"><div class="li"> <strong>Detailed AP Computer Scinece Principles Exam Description</strong></div>
</li>
</ul>
<blockquote><div class="no">
 <a href="https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf" class="urlextern" target="_blank" title="https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf" rel="ugc nofollow noopener">https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-course-and-exam-description.pdf</a></div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>70 Multiple-choice questions (70% of the exam, 120 minutes)</strong> o <strong>Single-select 57 questions</strong></div>
</li>
</ul>
<blockquote><div class="no">
 o Single-select with reading passage about a computing innovation 5 questions o Multi-select 8 questions</div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>Create Performance Task (30% of the exam, at least 12 hours of class time to work)</strong> o <strong>Coding your own app!</strong></div>
</li>
</ul>
<blockquote><div class="no">
 o Be creative!! o <strong>Apply your knowledge</strong> o <strong>Helpful Resources</strong> </div></blockquote>
<ul>
<li class="level1"><div class="li"> <a href="https://www.youtube.com/watch?v=j9HerBCGIcE" class="urlextern" target="_blank" title="https://www.youtube.com/watch?v=j9HerBCGIcE" rel="ugc nofollow noopener">https://www.youtube.com/watch?v=j9HerBCGIcE</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://www.youtube.com/watch?v=vF-fHWlxrRY" class="urlextern" target="_blank" title="https://www.youtube.com/watch?v=vF-fHWlxrRY" rel="ugc nofollow noopener">https://www.youtube.com/watch?v=vF-fHWlxrRY</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://www.youtube.com/watch?v=iu_qO4A2FNg" class="urlextern" target="_blank" title="https://www.youtube.com/watch?v=iu_qO4A2FNg" rel="ugc nofollow noopener">https://www.youtube.com/watch?v=iu_qO4A2FNg</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://www.youtube.com/watch?v=IB847UB2AW0" class="urlextern" target="_blank" title="https://www.youtube.com/watch?v=IB847UB2AW0" rel="ugc nofollow noopener">https://www.youtube.com/watch?v=IB847UB2AW0</a></div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://www.youtube.com/watch?v=l1_D8x-Yskw" class="urlextern" target="_blank" title="https://www.youtube.com/watch?v=l1_D8x-Yskw" rel="ugc nofollow noopener">https://www.youtube.com/watch?v=l1_D8x-Yskw</a></div>
</li>
</ul>
<blockquote><div class="no">
 (A step-by-step 5 part series that is extremely helpful if you have no idea how to start)</div></blockquote>
<ul>
<li class="level1"><div class="li"> <strong>2021 Scoring Rubric:</strong></div>
</li>
</ul>
<blockquote><div class="no">
 <a href="https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-2021-create-performance-task-scoring-guidelines.pdf" class="urlextern" target="_blank" title="https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-2021-create-performance-task-scoring-guidelines.pdf" rel="ugc nofollow noopener">https://apcentral.collegeboard.org/pdf/ap-computer-science-principles-2021-create-performance-task-scoring-guidelines.pdf</a></div></blockquote>

<p>
<strong>Technology and Tools Needed for Create Performance Task</strong>
</p>

<p>
Background
</p>

<p>
You need to setup your AP Digital Portfolio to officially submit your performance tasks and to sign up for the exam. There are also several tools you should be familiar with in order to create the necessary PDF documents and Video screen captures that you need to submit.
</p>

<p>
Resources and Quick Links
</p>
<ul>
<li class="level1"><div class="li"> <a href="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" class="urlextern" target="_blank" title="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" rel="ugc nofollow noopener">AP Student Guide for setting up digital portfolio</a> (PDF)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://digitalportfolio.collegeboard.org/" class="urlextern" target="_blank" title="https://digitalportfolio.collegeboard.org/" rel="ugc nofollow noopener">AP Digital Portfolio</a></div>
</li>
</ul>
<blockquote><div class="no">
 o AP Central web page about the digital portfolio</div></blockquote>
<ul>
<li class="level1"><div class="li"> <a href="https://bakerfranke.github.io/codePrint/" class="urlextern" target="_blank" title="https://bakerfranke.github.io/codePrint/" rel="ugc nofollow noopener">Code Print</a> - useful tool for preparing PDF of code for Create PT</div>
</li>
</ul>

<p>
More Details – Table of contents
</p>
<ul>
<li class="level1"><div class="li"> <a href="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#portfolio" class="urlextern" target="_blank" title="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#portfolio" rel="ugc nofollow noopener">AP Digital Portfolio Setup</a> (Create &amp; Explore PT)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#pdf-written" class="urlextern" target="_blank" title="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#pdf-written" rel="ugc nofollow noopener">Making PDFs for Written Responses</a> (Create &amp; Explore PT)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#pdf-code" class="urlextern" target="_blank" title="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#pdf-code" rel="ugc nofollow noopener">Making PDF of Program Code</a> (Create PT only)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> <a href="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#video" class="urlextern" target="_blank" title="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2#video" rel="ugc nofollow noopener">Making a Video Screen Capture</a> (Create PT required, could also use for Explore PT computational artifact)</div>
</li>
</ul>

<p>
AP Digital Portfolio Setup
</p>

<p>
Goal: Students should be aware of the Digital Portfolio and how to access it. They should know what&#039;s there and be familiar with the basic mechanics of uploading and submitting their projects.
</p>

<p>
If your students have not done this yet, they will need to register themselves with AP digital portfolio in order to upload their projects.
</p>

<p>
Follow College Board Instructions to Setup Portfolio
</p>
<ul>
<li class="level1"><div class="li"> Here is the <a href="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" class="urlextern" target="_blank" title="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" rel="ugc nofollow noopener">Student Guide for the digital portfolio.</a> Follow these instructions to get setup.</div>
</li>
</ul>

<p>
The digital portfolio and guide contains a few helpful other things students should know about such as:
</p>
<ul>
<li class="level1"><div class="li"> Guidance about how to create a PDF</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Templates for the written prompts</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Ways to save drafts of written responses on the site and come back to it</div>
</li>
</ul>

<p>
Making PDFs for Written Responses
</p>

<p>
You are required to make a PDF of your written responses to prompts. It&#039;s recommended that you use the College Board templates for filling out your responses. At some point you will have your written responses in a word processing document such as Microsoft Word, Google Docs, or Pages.
</p>

<p>
What follows is copied from the <a href="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" class="urlextern" target="_blank" title="https://secure-media.collegeboard.org/digitalServices/pdf/ap/computer-science-principles-digital-portfolio-student-guide.pdf" rel="ugc nofollow noopener">AP Student Guide for the digital portfolio</a>
</p>

<p>
How to make a PDF
</p>
<ul>
<li class="level1"><div class="li"> Recent versions of applications like: Word, PowerPoint, Pages, and Google Docs, have built-in features that allow you to save or export your file as a PDF. Instructions are provided below.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> If your software does not have a PDF option, visit the Adobe site and learn more about whether Acrobat from Adobe Systems can convert your document to PDF.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> You are responsible for ensuring that your file is properly formatted and readable. After you have created your PDF, be sure to check it by opening and reviewing your PDF in Adobe Reader, a free application that can be downloaded from the Adobe site.</div>
</li>
</ul>

<p>
Microsoft Office (Word, PowerPoint)
</p>
<ul>
<li class="level1"><div class="li"> In Word, Powerpoint, and other Microsoft Office programs you will “Save as PDF.” Visit the Microsoft Office support page for more information about “Save as PDF.” To save a Word or Powerpoint document as PDF:</div>
</li>
</ul>
<blockquote><div class="no">
 o Open your Word or Powerpoint document. o From the top menu select “File,” and select “Save As.” o In the dialog window, go to the drop-down menu for “Save as type,” and select “PDF.” o Click “Save.” </div></blockquote>

<p>
Google Docs
</p>
<ul>
<li class="level1"><div class="li"> In Google Docs, you will “Download as” PDF. Visit the Google support page for more information on “Download a file.” To download a Google Doc as a PDF:</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Open your Google doc</div>
</li>
</ul>
<blockquote><div class="no">
 o From the top menu select “File,” and select “Download as,” and select “PDF Document (.pdf)”</div></blockquote>

<p>
Pages
</p>
<ul>
<li class="level1"><div class="li"> In Pages, you will “Export to” PDF. Visit the Apple support page for more information or follow the steps below:</div>
</li>
</ul>
<blockquote><div class="no">
 o Open your Pages document. o From the top menu select “File,” and select “Export to,” and select “PDF.” o In the dialogue window select “Best,” image quality. o Choose a destination for the export and click “Export.” </div></blockquote>

<p>
Making PDF of Program Code (for the Create PT)
</p>

<p>
You need to make a PDF of your code and you also draw an oval and rectangle onto the PDF to highlight certain parts. There are a few options for this.
</p>
<ul>
<li class="level1"><div class="li"> Our recommendation: Use <a href="https://bakerfranke.github.io/codePrint/" class="urlextern" target="_blank" title="https://bakerfranke.github.io/codePrint/" rel="ugc nofollow noopener">CodePrint</a> - a tool for doing everything from the browser.</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Option 2: Make a PDF of the Code, then Edit the PDF using a PDF editor to draw shapes</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Option 3: Copy/Paste Code into a Word (or Google) document and add shapes there to produce PDF.</div>
</li>
</ul>

<p>
Details: how to make a pdf of your code
</p>

<p>
Step 1 - copy your code in App Lab
</p>
<ul>
<li class="level1"><div class="li"> Switch App Lab into text mode</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Select all the code(highlight all with your mouse or Ctrl+A)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Copy it (Edit → Copy, or Ctrl+C)</div>
</li>
</ul>

<p>
<a href="/dokuwiki/lib/exe/detail.php?id=ap_computer_science_principles&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image38.png" class="media" title="ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image38.png"><img src="/dokuwiki/lib/exe/fetch.php?w=400&amp;tok=f31507&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image38.png" class="media" loading="lazy" alt="" width="400" /></a>
</p>

<p>
Step 2 - paste the code into a page or doc for printing
</p>
<ul>
<li class="level1"><div class="li"> If using <a href="https://bakerfranke.github.io/codePrint/" class="urlextern" target="_blank" title="https://bakerfranke.github.io/codePrint/" rel="ugc nofollow noopener">CodePrint</a></div>
</li>
</ul>
<blockquote><div class="no">
 o This tool lets you draw rectangles and ovals over a pretty-ified version of the code (diagram at right) o If you can print a PDF from the browser, this should be all you need. </div></blockquote>
<ul>
<li class="level1"><div class="li"> Other options</div>
</li>
</ul>

<p>
<a href="/dokuwiki/lib/exe/detail.php?id=ap_computer_science_principles&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image39.png" class="media" title="ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image39.png"><img src="/dokuwiki/lib/exe/fetch.php?w=400&amp;tok=0d9915&amp;media=ap_computer_science_principles_study_guide_849a543785d8442fb93b21825e447f78:image39.png" class="media" loading="lazy" alt="" width="400" /></a>
</p>

<p>
* Option: Github Gist – <a href="https://gist.github.com/" class="urlextern" target="_blank" title="https://gist.github.com/" rel="ugc nofollow noopener">GitHub Gist</a> is a tool designed to let you quickly share code. We can use it to quickly print as well.
</p>
<blockquote><div class="no">
 o Go to GitHub Gist o Paste your code into the code area (the large open area with line numbers) o Optional: In the filename box type .js – this forces the box to recognize the code as javascript o Click “Create Secret Gist” - this will save the code to a new page anonymously o From your Browser choose “File → Print” and use your computer&#039;s option to print to PDF. </div></blockquote>
<ul>
<li class="level1"><div class="li"> Option: use a word processor Google docs or MS Word</div>
</li>
</ul>
<blockquote><div class="no">
 o This option is fine but you won&#039;t get line numbers next to your code which can be convenient. o If you choose this option you should add your annotations (rectangle and circle) here in the word processor. </div></blockquote>

<p>
How to add Ovals and Rectangles to a PDF
</p>

<p>
If not using <a href="https://bakerfranke.github.io/codePrint/" class="urlextern" target="_blank" title="https://bakerfranke.github.io/codePrint/" rel="ugc nofollow noopener">CodePrint</a> you&#039;ll need to add ovals and rectangles to the PDF of your code. Windows
</p>
<ul>
<li class="level1"><div class="li"> You need to install Adobe Acrobat (see the AP guide for students)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Open the PDF in Acrobat and add annotations</div>
</li>
</ul>

<p>
Mac
</p>
<ul>
<li class="level1"><div class="li"> The built in Preview App allows you to add rectangles and ovals directly</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> With PDF open in Preview go to Tools → Annotate → Rectangle for example.</div>
</li>
</ul>

<p>
Making a Video Screen Capture
</p>

<p>
Students are required to make at least one video that is a “Screen capture” of themselves using the program they wrote for the Create PT.
</p>

<p>
How To Make a Screencast
</p>

<p>
If you have not made any screencapture videos in class to this point students may ask how to do it. You will need to use 3rd party screen capture software. We recommend investigating options that will work for your school&#039;s software requirements. Here are two options:
</p>
<ul>
<li class="level1"><div class="li"> Online/Web: <a href="https://screencast-o-matic.com/" class="urlextern" target="_blank" title="https://screencast-o-matic.com/" rel="ugc nofollow noopener">Screencast-o-matic</a> (may require download depending on browser/plugins)</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> Windows / Mac: <a href="https://www.techsmith.com/screen-capture.html" class="urlextern" target="_blank" title="https://www.techsmith.com/screen-capture.html" rel="ugc nofollow noopener">Snagit from Techsmith</a> (requires download and signing up for a free trial)</div>
</li>
</ul>

<p>
Credits:
</p>

<p>
<a href="https://code.org/" class="urlextern" target="_blank" title="https://code.org/" rel="ugc nofollow noopener">https://code.org</a>
</p>

<p>
<a href="https://ceac.state.gov/genniv/" class="urlextern" target="_blank" title="https://ceac.state.gov/genniv/" rel="ugc nofollow noopener">https://ceac.state.gov/genniv/</a> (IPv4 Picture)
</p>

<p>
<a href="https://aphighered.collegeboard.org/sites/default/files/ap-computer-science-principles-course-overview.pdf" class="urlextern" target="_blank" title="https://aphighered.collegeboard.org/sites/default/files/ap-computer-science-principles-course-overview.pdf" rel="ugc nofollow noopener">https://aphighered.collegeboard.org/sites/default/files/ap-computer-science-principles-course-</a>
</p>

<p>
<a href="https://aphighered.collegeboard.org/sites/default/files/ap-computer-science-principles-course-overview.pdf" class="urlextern" target="_blank" title="https://aphighered.collegeboard.org/sites/default/files/ap-computer-science-principles-course-overview.pdf" rel="ugc nofollow noopener">overview.pdf</a>
</p>

<p>
<a href="https://www.csforallteachers.org/computer-science-principles" class="urlextern" target="_blank" title="https://www.csforallteachers.org/computer-science-principles" rel="ugc nofollow noopener">https://www.csforallteachers.org/computer-science-principles</a>
</p>

<p>
<a href="https://computing-concepts.cs.uri.edu/wiki/Computing_Innovations" class="urlextern" target="_blank" title="https://computing-concepts.cs.uri.edu/wiki/Computing_Innovations" rel="ugc nofollow noopener">https://computing-concepts.cs.uri.edu/wiki/Computing_Innovations</a>
</p>

<p>
<a href="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2" class="urlextern" target="_blank" title="https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2" rel="ugc nofollow noopener">https://studio.code.org/s/csp-create-2019/stage/1/puzzle/2</a>
</p>

</div>
<!-- EDIT{&quot;target&quot;:&quot;section&quot;,&quot;name&quot;:&quot;Unit 5- Building Apps&quot;,&quot;hid&quot;:&quot;unit_5-_building_apps&quot;,&quot;codeblockOffset&quot;:0,&quot;secid&quot;:6,&quot;range&quot;:&quot;31728-&quot;} -->